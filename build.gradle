buildscript {
	ext {
		springBootVersion = '3.4.0'
		set('springCloudVersion', "2024.0.0")
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.sonarqube" version "6.0.1.5171"
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.springframework.boot' version '3.4.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

//added to accept systemproperties while executing gradlew test cmd
test {
	systemProperties = System.properties
	useJUnitPlatform()
}

jar {
	archiveBaseName = 'scsb-gateway'
	archiveVersion = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 21
targetCompatibility = 21

repositories {
	mavenCentral()
}

dependencies {
	implementation fileTree(dir: '/data/commonjar', include: '*2.9.jar')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation('commons-beanutils:commons-beanutils:1.9.4')
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
	implementation('org.codehaus.jettison:jettison:1.5.4')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.apache.camel:camel-api:4.8.2')
	implementation('org.apache.camel:camel-bindy:4.8.2')
	implementation('org.apache.camel.springboot:camel-spring-boot-starter:4.8.2')
	implementation('org.apache.camel:camel-activemq:4.8.2')
	implementation 'org.apache.camel:camel-jms:4.8.2'
	implementation('org.apache.camel:camel-ftp:4.8.2')
	implementation('org.apache.camel:camel-csv:4.8.2')
	implementation('info.freelibrary:freelib-marc4j:2.6.12')
	testImplementation 'org.apache.camel:camel-jetty:4.8.2'
	implementation('org.apache.solr:solr-solrj:9.6.1')
//	implementation('org.apache.activemq:activemq-camel:5.16.7')
	implementation 'org.apache.camel:camel-activemq:4.8.2'
	implementation('org.apache.activemq:activemq-pool:6.1.4')
	implementation('org.apache.activemq:activemq-broker:6.1.4')
	implementation('org.apache.activemq:activemq-client-jakarta:6.1.0')
			{exclude module: 'activemq-client'}
	implementation('org.projectlombok:lombok:1.18.36')
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'net.logstash.logback:logstash-logback-encoder:8.0'
	implementation 'io.zipkin.brave:brave:6.0.3'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation group: 'org.json', name: 'json', version: '20230618'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.5.0'
	testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
	testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'

    annotationProcessor('org.projectlombok:lombok:1.18.36')
	testImplementation('org.projectlombok:lombok:1.18.36')
	testAnnotationProcessor('org.projectlombok:lombok:1.18.36')
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '9.1.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.11'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
	implementation 'ch.qos.logback:logback-classic:1.5.15'


}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '3.0.0-beta2'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

task scsbJavadocs(type: Javadoc) {
	source = sourceSets.main.java
	classpath = configurations.implementation
	options.addStringOption('Xdoclint:none', '-quiet')
	String home = System.getProperty("user.home");
	destinationDir =  new File(home+"/scsb-javadocs/scsb");

}
/*
bootJar {
	layered()
} */

jar {
	enabled = false
	archiveClassifier = '' //use empty string
}

tasks.named('bootJar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}